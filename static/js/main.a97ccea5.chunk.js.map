{"version":3,"sources":["Components/Header.js","Components/Todos.js","Components/Submit.js","Components/Widgets.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","numTodos","Todo","content","class","onClick","onDelete","id","TodoList","todos","tasks","map","todo","index","Submit","state","term","handleSubmit","e","preventDefault","onFormSubmit","setState","onSubmit","this","type","placeholder","value","onChange","target","React","Component","Widgets","time","Date","hours","getHours","minutes","getMinutes","scrolling","src","href","App","task","handleDelete","newArr","splice","length","Todos","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAeeA,MAXf,SAAgBC,GAEZ,OACI,sBAAKC,UAAU,eAAf,UACI,oBAAIA,UAAU,sBAAd,+CACA,qBAAIA,UAAU,sBAAd,sBAA8CD,EAAME,SAApD,mBACA,oBAAID,UAAU,sBAAd,uECKNE,EAAM,SAACH,GACT,OACI,sBAAKC,UAAW,YAAhB,UACKD,EAAMI,QACP,wBAAQC,MAAM,SAASC,QAAS,WAAON,EAAMO,SAASP,EAAMQ,KAA5D,qBAIGC,EAtBE,SAACT,GAEd,IAAMU,EAAOV,EAAMW,MAAMC,KAAI,SAACC,EAAMC,GAEhC,OAAO,cAAC,EAAD,CAAMV,QAASS,EAAmBL,GAAKM,EAAOP,SAAUP,EAAMO,UAAnCO,MAEtC,OACI,qBAAKb,UAAW,eAAhB,SACKS,KCoBEK,E,4MAzBXC,MAAQ,CAAEC,KAAM,I,EAEhBC,aAAe,SAACC,GACdA,EAAEC,iBACqB,KAApB,EAAKJ,MAAMC,OACd,EAAKjB,MAAMqB,aAAa,EAAKL,MAAMC,MACnC,EAAKK,SAAS,CAAEL,KAAM,O,4CAGxB,WAAU,IAAD,OACP,OACE,uBAAMM,SAAUC,KAAKN,aAArB,UACE,uBACEO,KAAK,OACLxB,UAAU,QACVyB,YAAY,aACZC,MAAOH,KAAKR,MAAMC,KAElBW,SAAU,SAACT,GAAD,OAAO,EAAKG,SAAS,CAACL,KAAME,EAAEU,OAAOF,WAEjD,wBAAQ1B,UAAU,SAAlB,2B,GArBW6B,IAAMC,WCuBZC,MAvBf,WACI,IAAMC,EAAM,IAAIC,KACVC,EAAOF,EAAKG,WACZC,EAASJ,EAAKK,aAEpB,OAKI,cAJA,CAIA,iBACI,wBAAQC,UAAU,KAAKC,IAAI,2BAC3B,sBAAKvC,UAAU,OAAf,UAAuBkC,EAAO,GAA9B,IAAmCE,EAAS,MAC5C,sBAAKpC,UAAU,QAAf,UACI,mBAAGwC,KAAK,IAAR,sBACA,mBAAGA,KAAK,IAAR,qBACA,mBAAGA,KAAK,IAAR,uBAEJ,uBAAOhB,KAAK,eCgBTiB,E,4MA7Bb1B,MAAQ,CACNL,MAAO,CAAC,cAAgB,YAAc,OAAQ,eAAiB,WAAY,MAAO,cAAe,U,EAGnGO,aAAe,SAAAyB,GACb,EAAKrB,SAAS,CAACX,MAAM,GAAD,mBAAM,EAAKK,MAAML,OAAjB,CAAwBgC,O,EAI9CC,aAAe,SAAC9B,GACd,IAAM+B,EAAO,YAAK,EAAK7B,MAAML,OAC7BkC,EAAOC,OAAOhC,EAAO,GACrB,EAAKQ,SAAS,CAACX,MAAOkC,K,4CAExB,WACE,OACE,qCACA,cAAC,EAAD,IACA,qBAAK5C,UAAU,UAAf,SACE,sBAAKA,UAAU,aAAf,UACE,cAAC,EAAD,CAAQC,SAAUsB,KAAKR,MAAML,MAAMoC,SACnC,cAACC,EAAD,CAAOrC,MAAOa,KAAKR,MAAML,MAAOJ,SAAUiB,KAAKoB,eAC/C,cAAC,EAAD,CAAQvB,aAAcG,KAAKN,2B,GAvBnBa,aCKHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.a97ccea5.chunk.js","sourcesContent":["import React from 'react'\n\n//js above return { } {{ }} inline style double\n//rfec \nfunction Header(props) {\n    //js\n    return (\n        <div className=\"Class-header\">\n            <h1 className=\"class-header-tittle\">This is your routine for the day!</h1>\n            <h2 className=\"class-header-tittle\">You have {props.numTodos} tasks to do!</h2>\n            <h3 className=\"class-header-tittle\">When you're done, feel free to add more to your needs</h3>\n        </div>\n    )\n}\n\nexport default Header\n// import React from 'react'\n// function Header(props) {\n//     const name= \"April\"; \n//     const date= new Date();\n//     const hours= date.getHours();\n//     const minutes= date.getMinutes(); \n//     return (\n//         <div className= \"card-header\">\n//             <h1 className=\"card-header-title header\">You have {props.numTodos} Tasks to Do </h1>\n//             <h2> Hello {name} It is currently {hours % 12} : {minutes}</h2>\n//         </div>\n//     )\n// }\n// export default Header\n\n","import React from 'react'\nconst TodoList = (props)  => {\n    //have access to all the todos we will pass the tasks as a prop\n    const todos= props.tasks.map((todo, index) => {\n        //whenever we use .map we use a unique key pass index as a parameter\n        return <Todo content={todo} key= {index} id= {index} onDelete={props.onDelete} />\n    })\n    return (\n        <div className= \"list-wrapper\">\n            {todos}   \n        </div>\n    );\n}\n//   windows key + . X\n// Displaying the content of the task string \nconst Todo= (props) => {\n    return(\n        <div className= 'list-item'>\n            {props.content}\n            <button class=\"delete\" onClick={() => {props.onDelete(props.id)}}> X </button>\n        </div>\n    )\n}\nexport default TodoList; \n","//we are passing state \nimport React from \"react\";\n\nclass Submit extends React.Component {\n    state = { term: '' };\n  \n    handleSubmit = (e) => {\n      e.preventDefault();\n      if(this.state.term === '') return;\n      this.props.onFormSubmit(this.state.term);\n      this.setState({ term: '' });\n    }\n  \n    render() {\n      return(\n        <form onSubmit={this.handleSubmit}>\n          <input \n            type='text'\n            className='input'\n            placeholder='Enter Item'\n            value={this.state.term}\n            //changes are rendered through React not the browser\n            onChange={(e) => this.setState({term: e.target.value})}\n          />\n          <button className='button'>Submit</button>\n        </form>\n      );\n    }\n  }\nexport default Submit;","import React from 'react';\nimport \"../Styles/Style.css\";\n\nfunction Widgets() {\n    const time= new Date();\n    const hours= time.getHours();\n    const minutes= time.getMinutes();\n\n    return (\n        //iframe to website\n        //shows current time//js\n        //links for internal pages\n        //thimk CSS zize, placement\n        <div>\n            <iframe scrolling=\"no\" src=\"http://localhost:3000/\"></iframe>\n            <div className=\"time\">{hours %12}:{minutes %12}</div>\n            <div className=\"links\">\n                <a href=\"/\">Click me</a>\n                <a href=\"/\">Test me</a>\n                <a href=\"/\">Run me</a>\n            </div>\n            <input type=\"search\"></input>\n        </div>\n    )\n}\n\nexport default Widgets\n\n\n","import React, { Component } from 'react';\nimport \"./Styles/Style.css\"\nimport Header from \"./Components/Header\"; \nimport Todos from \"./Components/Todos\"; \nimport Submit from \"./Components/Submit\"; \nimport Widgets from \"./Components/Widgets\";\n\nclass App extends Component {\n  state = {\n    tasks: ['Morning run' , 'Breakfast' , 'Work' ,\"Walk the dog\" , \"Exercise\", 'Eat', 'Read a book', \"Sleep\"]\n  };\n  //the function copies the content of the old task array and adds a new task as well.\n  handleSubmit = task => {\n    this.setState({tasks: [...this.state.tasks, task]});\n  }\n  \n  //the delete button //removes an element form the tasks array\n  handleDelete = (index) => {\n    const newArr= [...this.state.tasks];\n    newArr.splice(index, 1); \n    this.setState({tasks: newArr}); \n  }\n  render() {\n    return(\n      <>\n      <Widgets />\n      <div className='wrapper'>\n        <div className='card frame'>\n          <Header numTodos={this.state.tasks.length} />\n          <Todos tasks={this.state.tasks} onDelete={this.handleDelete} />\n          <Submit onFormSubmit={this.handleSubmit} />\n        </div>\n      </div>\n      </>\n    );\n  } \n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}